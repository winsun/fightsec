<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>plt on 诚安</title>
    <link>https://winsun.github.io/fightsec/tags/plt/</link>
    <description>Recent content in plt on 诚安</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 04 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://winsun.github.io/fightsec/tags/plt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ret2plt</title>
      <link>https://winsun.github.io/fightsec/post/pwn_05_ret2plt/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsun.github.io/fightsec/post/pwn_05_ret2plt/</guid>
      <description>PLT, or Procedure Linkage Table. These are stubs that look up the addresses in the .got.plt section, and either jump to the right address, or trigger the code in the linker to look up the address. (If the address has not been filled in to .got.plt yet.) 漏洞程序 #include &amp;lt;stdio.h&amp;gt; void vuln() { puts(&amp;quot;Come get me&amp;quot;); char buffer[20]; gets(buffer); } int main() { vuln(); return 0; } 32位ret2plt plt分析 程序保护 //gcc source.c -o vuln-32 -no-pie -fno-stack-protector -z execstack -m32 └─$ checksec --file=./vuln-32 [*] &#39;/home/kali/exploits/ret2plt/vuln-32&#39; Arch: i386-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE (0x8048000) plt节 .plt节可执行 [0xf7fe4450]&amp;gt; iS~.plt 10 0x000002f0 0x18 0x080482f0 0x18</description>
    </item>
    
    <item>
      <title>GOT&amp;PLT</title>
      <link>https://winsun.github.io/fightsec/post/linux_03_got_plt/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://winsun.github.io/fightsec/post/linux_03_got_plt/</guid>
      <description>gdb调试overbuffer objdump readelf string symbol table GOT PLT</description>
    </item>
    
  </channel>
</rss>
